import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { toast } from 'react-toastify';
import localstorage from 'local-storage';
import { HashLoader } from 'react-spinners';
import Checkbox from '@mui/material/Checkbox';
import { userCadastro } from '../../../api/userApi';
import { BotaoSolido, Input, SubTitulo, Titulo } from '../../../styled';
import Modal from '../../../components/modals/textModal';
import './index.sass';

const condicoes = `
Requisitos de idade e responsabilidade dos pais e respons√°veis.
Ao acessar nossos servi√ßos, voc√™ confirma que tem pelo menos 13 anos e atende √† idade m√≠nima de consentimento digital em seu pa√≠s. Mantemos uma lista de idades m√≠nimas em todo o mundo como um recurso para voc√™, mas n√£o podemos garantir que seja sempre precisa.
Se voc√™ tem idade suficiente para acessar nossos servi√ßos em seu pa√≠s, mas n√£o tem idade suficiente para ter autoridade para consentir com nossos termos, seu pai ou respons√°vel deve concordar com nossos termos em seu nome. Pe√ßa ao seu pai ou respons√°vel para ler estes termos com voc√™. Se voc√™ √© pai ou respons√°vel legal e permite que seu filho adolescente use os servi√ßos, esses termos tamb√©m se aplicam a voc√™ e voc√™ √© respons√°vel pela atividade de seu filho adolescente nos servi√ßos.



Autoriza√ß√µes e restri√ß√µes
Pode aceder e utilizar o Servi√ßo tal como lhe √© disponibilizado, desde que cumpra com o presente Contrato com e a lei.  Pode ver ou ouvir Conte√∫do para os seus fins pessoais, n√£o comerciais.


Aplicam-se as seguintes restri√ß√µes √† sua utiliza√ß√£o do Servi√ßo. N√£o est√° autorizado a:

Aceder, reproduzir, transferir, distribuir, transmitir, emitir, apresentar, vender, licenciar, alterar, modificar ou, de qualquer outro modo, utilizar qualquer parte do Servi√ßo ou qualquer Conte√∫do, exceto: (a) conforme especificamente permitido pelo Servi√ßo;  (b) com consentimento pr√©vio por escrito da Umbrella e, se aplic√°vel, dos titulares dos direitos correspondentes; ou (c) conforme permitido pela lei aplic√°vel;
contornar, desativ ar, interagir de forma fraudulenta ou, de qualquer outro modo, interferir com o Servi√ßo (ou tentar realizar alguma destas atividades), incluindo funcionalidades relacionadas com a seguran√ßa ou funcionalidades que: (a) impedem ou restringem a c√≥pia ou outra utiliza√ß√£o do Conte√∫do ou (b) limitam a utiliza√ß√£o do Servi√ßo ou do Conte√∫do;
aceder ao Servi√ßo atrav√©s de quaisquer meios automatizados (como rob√¥s, botnets ou scrapers) exceto (a) no caso de motores de pesquisa p√∫blicos, em conformidade com o ficheiro robots.txt da Umbrella; (b) com o consentimento pr√©vio por escrito da Umbrella; (c) conforme permitido pela lei aplic√°vel;
recolher ou utilizar quaisquer informa√ß√µes que possam identificar uma pessoa (por exemplo, recolher nomes de utilizador ou caras), exceto se permitido pela pessoa em quest√£o ou se autorizado ao abrigo da sec√ß√£o (3) acima;

Utilizar o Servi√ßo para distribuir conte√∫do promocional ou comercial n√£o solicitado ou outros pedidos indesejados ou solicita√ß√µes em massa (spam);
causar ou incentivar quaisquer medidas imprecisas de intera√ß√£o genu√≠na dos utilizadores com o Servi√ßo, incluindo atrav√©s do pagamento a pessoas ou do fornecimento de incentivos para aumentar as visualiza√ß√µes, os gostos ou os n√£o gostos de um v√≠deo, ou para aumentar os subscritores de um canal ou, de qualquer outro modo, manipular m√©tricas;
utilizar indevidamente qualquer processo de den√∫ncia, sinaliza√ß√£o, reclama√ß√£o, disputa ou recurso, incluindo atrav√©s de submiss√µes infundadas, vexat√≥rias ou levianas;
realizar concursos no Servi√ßo ou atrav√©s do mesmo que n√£o cumpram as diretrizes e pol√≠ticas para concursos da Umbrella;

Utilizar o Servi√ßo para ver ou ouvir Conte√∫do para al√©m de uma utiliza√ß√£o pessoal e n√£o comercial (por exemplo, n√£o pode exibir publicamente v√≠deos ou transmitir m√∫sica a partir do Servi√ßo); ou
utilizar o Servi√ßo para: (a) vender qualquer publicidade, patroc√≠nios ou promo√ß√µes colocados no Servi√ßo ou no Conte√∫do, √† volta do mesmo ou inseridos no mesmo, que n√£o os permitidos nas Pol√≠ticas de Publicidade no Umbrella (por exemplo, posicionamentos de produtos conformes); ou (b) vender publicidade, patroc√≠nios ou promo√ß√µes em qualquer p√°gina de qualquer Website ou aplica√ß√£o que inclua apenas Conte√∫do do Servi√ßo ou no qual o Conte√∫do do Servi√ßo seja a base principal de tais vendas (por exemplo, vender an√∫ncios numa p√°gina Web em que os v√≠deos do Umbrella s√£o o √∫nico conte√∫do de valor).



A Umbrella aceita certos m√©todos de pagamento. Estes podem variar de acordo com o pa√≠s ou servi√ßo pago e podem mudar de tempos em tempos. Voc√™ pode atualizar seus m√©todos de pagamento na se√ß√£o "Faturamento" da p√°gina Configura√ß√µes em sua conta Umbrella. Observe que a Umbrella n√£o √© respons√°vel por quaisquer taxas ou encargos aplicados por sua institui√ß√£o financeira ou emissor do m√©todo de pagamento relacionados ao processamento do seu pagamento. Em alguns casos, podemos permitir que voc√™ pague contra uma fatura. As faturas ser√£o enviadas para o endere√ßo de e-mail associado √† sua conta e faturaremos no m√°ximo quarenta e cinco (45) dias ap√≥s a compra do servi√ßo relevante. Todos os valores faturados s√£o devidos e pag√°veis no prazo de trinta (30) dias a partir da data da fatura, a menos que especificado de outra forma na pr√≥pria fatura. Todos os valores s√£o pagos em reais, salvo indica√ß√£o em contr√°rio.
`;

export default function Index() {
	const [nome, setNome] = useState('');
	const [email, setEmail] = useState('');
	const [senha, setSenha] = useState('');
    const [endereco, setEndereco] = useState('');
    const [telefone, setTelefone] = useState('');
    const [cpf, setCpf] = useState('');
	const [senhaconf, setSenhaconf] = useState('');
	const [nascimento, setNascimento] = useState();
	const [termos, setTermos] = useState(false);
	const [loading, setLoading] = useState(false);
	const navigate = useNavigate();
	const [modal, setModal] = useState(false);

	async function handleCadastro() {
		if (!termos) return;

		localstorage.remove('user');
		setLoading(true);
		try {
			if (senha !== senhaconf) throw new Error('As senhas s√£o coincidem');
			await userCadastro(nome, email, senha, nascimento);
			toast.success('üöÄ Conta criada com sucesso!');
		} catch (err) {
			if (err.response) toast.error(err.response.data.err);
			else toast.warning(err.message);
		}
		setLoading(false);
	}

	function ativar() {
		setModal(!modal);
	}

	return (
		<div className='cadastro-admin page'>
			<HashLoader
				color='#2d95b1'
				loading={loading}
				cssOverride={{
					position: 'absolute',
					left: '50%',
					top: '50%',
					transform: 'translate(-50%, -50%)',
					zIndex: '10',
					background: '#0000002d',
					width: '100vw',
					height: '100vh',
				}}
				size={50}
				aria-label='Loading Spinner'
				data-testid='loader'
			/>
			<Modal
				ativo={modal}
				state={ativar}
				titulo='Termos e condi√ß√µes'
				conteudo={condicoes}
			/>
			<main>
				<div className='cadastro-titulos'>
					<Titulo
						cor='#02C17D'
						fonte='4vw'>
						Cadastro
					</Titulo>
				</div>
				<div className='cadastro-corpo'>
					<div className='cadastro-inputs'>
						<Input
							placeholder='Nome de admin'
							width='100%'
							type='text'
							value={nome}
							onChange={e => setNome(e.target.value)}
							disabled={loading}
							onKeyDown={e => e.key === 'Enter' && handleCadastro()}
						/>
						<Input
							placeholder='Email'
							width='100%'
							type='email'
							value={email}
							onChange={e => setEmail(e.target.value)}
							disabled={loading}
							onKeyDown={e => e.key === 'Enter' && handleCadastro()}
						/>
                        <Input
							placeholder='Endere√ßo'
							width='100%'
							value={endereco}
							onChange={e => setEndereco(e.target.value)}
							disabled={loading}
							onKeyDown={e => e.key === 'Enter' && handleCadastro()}
						/>
						<Input
							placeholder='Data de nascimento'
							width='100%'
							onFocus={e => (e.target.type = 'date')}
							onBlur={e => (e.target.type = 'text')}
							value={nascimento}
							onChange={e => setNascimento(e.target.value)}
							disabled={loading}
							onKeyDown={e => e.key === 'Enter' && handleCadastro()}
						/>
						<Input
							placeholder='Telefone'
							width='100%'
							value={telefone}
							onChange={e => setTelefone(e.target.value)}
							disabled={loading}
							onKeyDown={e => e.key === 'Enter' && handleCadastro()}
						/>
						<Input
							placeholder='CPF'
							width='100%'
							value={cpf}
							onChange={e => setCpf(e.target.value)}
							disabled={loading}
							onKeyDown={e => e.key === 'Enter' && handleCadastro()}
						/>
						<Input
							placeholder='Senha'
							width='100%'
							type='password'
							value={senha}
							onChange={e => setSenha(e.target.value)}
							disabled={loading}
							onKeyDown={e => e.key === 'Enter' && handleCadastro()}
						/>
						<Input
							placeholder='Confirme sua senha'
							width='100%'
							type='password'
							value={senhaconf}
							onChange={e => setSenhaconf(e.target.value)}
							disabled={loading}
							onKeyDown={e => e.key === 'Enter' && handleCadastro()}
						/>
					</div>
					<div className='cadastro-btn'>
						<BotaoSolido
							fonte='4vw'
							width='100%'
							onClick={handleCadastro}
							disabled={loading || !termos}>
							Confirmar
						</BotaoSolido>
						<div className='cadastro-legenda'>
							<div>
								J√° possui uma conta? Clique <span onClick={() => navigate('/login')}> aqui </span> para fazer login
							</div>
						</div>
					</div>
				</div>
			</main>
		</div>
	);
};